/**
 * USEFUL LINKS:
 * Media events on <audio> and <video> tags:
 * https://developer.mozilla.org/en-US/docs/Web/Guide/DOM/Events/Media_events
 * Properties and Methods:
 * https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement
 *
 * Understanding TimeRanges objects:
 * http://html5doctor.com/html5-audio-the-state-of-play/
 *
 * Wonderful documentation from MDN, really.
 */
angular.module("angular-audio-player",["helperFunctions"]).directive("audioPlayer",["$rootScope","$log","$interpolate","$timeout","throttle",function(e,t,n,r,i){var s=function(e,t,n,r){if(!(this instanceof s))return new s(n,r);r=r||{},n=n||[],this.loaded=!1,this._element=e,this._audioTag=e[0],this.name=r.name||"audioplayer",this._scope=t,this._bindListeners(t),this._playlist=n,this.playing=!1,this.currentTrack=0,this.tracks=n.length,this.volume=this._audioTag.volume,this.duration=this._audioTag.duration,this.formatDuration="",this.currentTime=this._audioTag.currentTime,this.formatTime="",this.loadPercent=0,this.position=this.currentTime};return s.prototype={load:function(e,t){typeof e=="boolean"?(t=e,e=null):typeof e=="object"&&(this._clearAudioList(),this._addAudioList(e)),this._scope.$emit(this.name+":load",t),this._audioTag.load();if(t){var n=this;n._element.bind("canplaythrough",function(e){n.play(),n._element.unbind("canplaythrough")})}},play:function(e){if(this._playlist.length>e)return this.currentTrack=e+1,this.load(this._playlist[e],!0);!this.currentTrack&&this._audioTag.readyState&&this.currentTrack++,this.loaded==0&&(this.loaded=!0),this._audioTag.play()},playPause:function(e){typeof e=="number"&&e+1!==this.currentTrack?this.play(e):this.playing?this.pause():this.play()},pause:function(){this._audioTag.pause()},next:function(e){var t=this;if(t.currentTrack&&t.currentTrack<t.tracks){var n=e||t.playing;t.pause(),r(function(){t._clearAudioList(),t._addAudioList(t._playlist[t.currentTrack]),t.load(n),t.currentTrack++})}},prev:function(){var e=this;if(e.currentTrack&&e.currentTrack-1){var t=e.playing;e.pause(),r(function(){e._clearAudioList(),e._addAudioList(e._playlist[e.currentTrack-2]),e.load(t),e.currentTrack--})}},_addAudioList:function(e){var t=this;if(angular.isArray(e))angular.forEach(e,function(e,r){var i=angular.element(n('<source src="{{ src }}" type="{{ type }}" media="{{ media }}">')(e));t._element.append(i)});else if(angular.isObject(e)){var r=angular.element(n('<source src="{{ src }}" type="{{ type }}" media="{{ media }}">')(e));t._element.append(r)}},_clearAudioList:function(){this._element.contents().remove()},_formatTime:function(e){var t=parseInt(e/3600,10)%24,n=parseInt(e/60,10)%60,r=parseInt(e%60,10),i,s=(n<10?"0"+n:n)+":"+(r<10?"0"+r:r);return t>0?i=(t<10?"0"+t:t)+":"+s:i=s,i},_bindListeners:function(e){var n=this,r=this._element,s=i(1e3,!1,function(r){t.info("count how many times."),e.$apply(function(){n.currentTime=n.position=n._audioTag.currentTime,n.formatTime=n._formatTime(n.currentTime)})}),o=function(t){return function(r){e.$apply(function(){n.playing=t}),t?e.$emit(n.name+":play",n.currentTrack-1):e.$emit(n.name+":pause")}},u=function(t){e.$apply(function(){n.currentTrack||n.currentTrack++,n.duration=n._audioTag.duration,n.formatDuration=n._formatTime(n.duration),n.loadPercent=0})},a=function(e){n.next(!0)},f=function(t){n._audioTag.buffered.length&&e.$apply(function(){n.loadPercent=parseInt(n._audioTag.buffered.end(n._audioTag.buffered.length-1)/n.duration*100,10)})};r.bind("playing",o(!0)),r.bind("pause",o(!1)),r.bind("ended",a),r.bind("timeupdate",s),r.bind("loadedmetadata",u),r.bind("progress",f)}},{scope:{exposedPlayer:"=playerControl",playlist:"=playlist"},link:function(e,n,i,o){if(n[0].tagName!=="AUDIO")return t.error("audioPlayer directive works only when attached to an <audio> type tag");var u=[],a=n.find("source"),f=e.playlist||[];angular.forEach(a,function(e,t){u.push({src:e.src,type:e.type,media:e.media})}),u.length&&f.unshift(u),e.exposedPlayer=new s(n,e,f),e.$watch("playlist",function(n,i,s){t.warn("playlist changed");var o=e.exposedPlayer,u,a=null;if(n===undefined)return t.error("if you use playlist attribute, you need to $scope.playlistVariable = []; in your code");if(o.currentTrack){u=i[o.currentTrack-1];for(var f=0;f<n.length;f++)if(angular.equals(n[f],u)){a=f;break}a!==null?(o.currentTrack=a+1,o.tracks=n.length):(o.pause(),n.length&&r(function(){o._clearAudioList(),o._addAudioList(n[0]),o.load(),o.tracks=n.length}))}else n.length&&(o._clearAudioList(),o._addAudioList(n[0]),o.load(),o.tracks=n.length)},!0),e.$on("$destroy",function(){})}}}]);